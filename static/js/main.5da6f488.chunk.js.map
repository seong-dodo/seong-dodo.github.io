{"version":3,"sources":["data.js","Detail.js","App.js","serviceWorker.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","Detail","history","useHistory","useState","isShow","isShow변경","input","input변경","누른탭변경","스위치","타이머","setTimeout","clearTimeout","useParams","찾은상품","shoes","find","상품","className","onChange","e","target","value","src","width","onClick","재고변경","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","재고context","React","createContext","Product","useContext","i","App","data","shoes변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","as","to","NavDropdown","Divider","exact","path","Jumbotron","Button","Provider","map","a","key","axios","get","then","result","console","log","catch","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5da6f488.chunk.js","sourcesContent":["export default[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n  ] ","import React, { useEffect, useState } from 'react';\r\nimport { useHistory , useParams } from 'react-router-dom';\r\nimport { Form, Nav } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n\r\n  let 박스 = styled.div`\r\n   padding : 20px;\r\n  `;\r\n\r\n  let 제목 = styled.h4`\r\n   font-size : 25px; \r\n   color : ${ props => props.색상 }\r\n  `;\r\n\r\n\r\n\r\nfunction Detail(props) {\r\n  \r\n    let  history = useHistory();\r\n    let [isShow, isShow변경] = useState( true );\r\n    let [input, input변경] = useState(' ');\r\n    let [누른탭, 누른탭변경] = useState(0);\r\n    let [스위치, 스위치변경] = useState(false);\r\n\r\n\r\n  useEffect ( ()=>{\r\n    let 타이머 = setTimeout ( ()=>{ isShow변경( false ) }, 2000 );\r\n    return ()=>{ clearTimeout(타이머) }\r\n  }, [ isShow ] );\r\n\r\n  let { id } = useParams();\r\n  let 찾은상품 = props.shoes.find(\r\n    function(상품){\r\n      return 상품.id == id\r\n    } );\r\n\r\n    return(\r\n        <div className=\"container\">\r\n          <박스>\r\n           <제목 className=\"red\"> Detail </제목>\r\n          {/* <제목 색상={ 'red' } > Detail </제목>\r\n           <제목 색상= \"blue\" > Detail </제목> */}\r\n          </박스>\r\n\r\n          { input }\r\n          <input onChange={ (e)=>{ input변경( e.target.value ) } } />\r\n\r\n          <div className=\"my-alert\">\r\n            <p>재고가 얼마 남지 않았습니다!!!</p>\r\n          </div>\r\n\r\n          {\r\n\r\n            isShow === true\r\n            ?<div className=\"my-alert-yellow\">\r\n               <p>재입고 없는 상품</p>\r\n              </div>\r\n            : null\r\n\r\n          }\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <img src={'https://codingapple1.github.io/shop/shoes' + (props.shoes[id].id + 1) + '.jpg'}  width=\"100%\" />\r\n              </div>\r\n              <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n                <p>{찾은상품.content}</p>\r\n                <p>{찾은상품.price}원</p>\r\n\r\n                <Info 재고={props.재고} ></Info>\r\n                <button className=\"btn btn-danger\" onClick={ ()=>{ props.재고변경([9,10,11]) } } >주문하기</button> \r\n                <button className=\"btn btn-danger\" onClick={ ()=>{ history.goBack(); } }>뒤로가기</button> \r\n              </div>\r\n            </div>\r\n\r\n\r\n            <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"link-0\" onClick={ ()=>{ 누른탭변경(0)} } >Active</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"link-1\" onClick={ ()=>{ 누른탭변경(1)} }>Option 2</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"link-2\" onClick={ ()=>{ 누른탭변경(2)} }>Option 3</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n\r\n\r\n           <CSSTransition in={스위치} classNames=\"wow\" timeout={500} >\r\n               <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\r\n           </CSSTransition>\r\n         \r\n\r\n        </div>  \r\n    )\r\n}\r\n\r\nfunction TabContent (props){\r\n\r\n  useEffect( ()=> {\r\n    props.스위치변경(true);\r\n  });\r\n\r\n  if (props.누른탭 === 0){\r\n  return  <div>0번째내용입니다</div>\r\n    } else if(props.누른탭 === 1){ \r\n    return <div>1번째내용입니다</div>\r\n    } else if(props.누른탭 === 2){\r\n      return  <div>2번째내용입니다</div>\r\n    }\r\n     \r\n   }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Info (props){\r\n  return(\r\n  <p>재고 : { props.재고[0] }</p>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Detail;","/* eslint-disable */\n\nimport React, { useState, useContext } from 'react';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from 'react-bootstrap';\nimport './App.css';\nimport data from './data.js';\nimport Detail from './Detail.js';\nimport axios from 'axios';\n\nimport { Link, Route, Switch } from 'react-router-dom';\n\n\n\nlet 재고context = React.createContext();\n\nfunction App() {\n\n\n  let [shoes, shoes변경] = useState (data);\n  let [재고, 재고변경] = useState ([10,11,12]);\n\n\n\n  return (\n    <div className=\"App\">\n        \n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">ShoesShop</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Link as={Link} to=\"/\">Home </Nav.Link>\n          <Nav.Link as={Link} to=\"/detail\">Detail </Nav.Link>\n          <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n         </NavDropdown>\n       </Nav>\n     </Navbar.Collapse>\n    </Navbar>\n\n\n    <Switch>\n\n    <Route exact path=\"/\">\n       <Jumbotron className=\"background\">\n         <h1>20% Season OFF</h1>\n         <p>\n         This is a simple hero unit, a simple jumbotron-style component for calling\n         extra attention to featured content or information.\n         </p>\n         <p>\n           <Button variant=\"primary\">Learn more</Button>\n         </p>\n       </Jumbotron>\n\n       <div className=\"container\">\n\n        <재고context.Provider value={재고} >\n\n         <div className=\"row\">\n           {\n             shoes.map( (a,i)=>{\n               return <Product shoes={ shoes[i] } i={i} key={i} /> } )            \n            }\n        \n          </div>\n        \n        </재고context.Provider>\n\n          <button className=\"btn btn-primary\" onClick={ ()=>{\n\n            axios.get('https://codingapple1.github.io/shop/data2.json')\n            .then( (result)=>{\n              console.log(result.data)\n              shoes변경 ([...shoes , ...result.data ]);\n            } )\n            .catch( ()=>{\n              console.log('실패했어요')\n            } )\n\n          }}>더보기</button>\n        </div>\n    </Route>\n\n    <Route path=\"/detail/:id\">\n       <Detail shoes={ shoes } 재고={재고} 재고변경={재고변경} />\n    </Route>\n \n    {/*<Route path=\"/:id\">\n         <div>안녕하세요</div>\n       </Route>*/}\n        \n\n\n    </Switch> \n    \n\n     {/* <Route path=\"어쩌구\" component={ Modal } ></Route>   */}\n\n\n\n  </div>\n  );\n}\n\n\n\nfunction Product(props){\n\n  let 재고 = useContext(재고context);\n\n  return(\n    <div className=\"col-md-4\">\n       <img src={'https://codingapple1.github.io/shop/shoes' + (props.i +1) + '.jpg'} width=\"100%\" />\n        <h4> { props.shoes.title } </h4>\n        <p> { props.shoes.content }&{ props.shoes.price } </p>\n        {재고}\n    </div>\n  )\n } \n\n\n\n\nexport default App;\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}